version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:13-alpine
    container_name: temu-omni-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-temu_omni}
      POSTGRES_USER: ${POSTGRES_USER:-temu_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-temu_password}
    ports:
      - "127.0.0.1:5432:5432"  # 只允许本地访问
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-temu_user} -d ${POSTGRES_DB:-temu_omni}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - temu-network
    restart: always

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: temu-omni-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    ports:
      - "127.0.0.1:6379:6379"  # 只允许本地访问
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - temu-network
    restart: always

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: temu-omni-backend
    environment:
      - APP_NAME=Temu-Omni
      - APP_VERSION=1.0.0
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-temu_user}:${POSTGRES_PASSWORD:-temu_password}@postgres:5432/${POSTGRES_DB:-temu_omni}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - TEMU_APP_KEY=${TEMU_APP_KEY}
      - TEMU_APP_SECRET=${TEMU_APP_SECRET}
      - TEMU_API_BASE_URL=https://openapi-b-us.temu.com/openapi/router
      - CORS_ORIGINS=["https://echofrog.net","https://www.echofrog.net","http://echofrog.net","http://www.echofrog.net"]
      - AUTO_SYNC_ENABLED=True
      - SYNC_INTERVAL_MINUTES=30
      - TIMEZONE=Asia/Shanghai
    expose:
      - "8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - temu-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - VITE_API_BASE_URL=https://echofrog.net/api
    container_name: temu-omni-frontend
    expose:
      - "80"
    networks:
      - temu-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: temu-omni-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - temu-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  temu-network:
    driver: bridge
